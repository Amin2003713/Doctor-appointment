@page "/register"
@rendermode InteractiveWebAssembly
<MudPaper Class="pa-6 mx-auto mt-12" Style="max-width:420px" Elevation="8" dir="rtl">
    <MudText Typo="Typo.h5" Class="mb-4">ثبت‌نام</MudText>

    <EditForm FormName="register" EditContext="_editContext" OnValidSubmit="DoRegister">
        <DataAnnotationsValidator/>

        <MudTextField @bind-Value="_model.FullName"
                      Label="نام کامل"
                      For="@(() => _model.FullName)"
                      Required="true"
                      Immediate="true"
                      Variant="Variant.Outlined"
                      FullWidth="true"/>

        <MudTextField @bind-Value="_model.Email"
                      Label="ایمیل"
                      For="@(() => _model.Email)"
                      Required="true"
                      Immediate="true"
                      Variant="Variant.Outlined"
                      FullWidth="true"
                      Class="mt-3"/>

        <MudTextField @bind-Value="_model.Password"
                      Label="رمز عبور"
                      For="@(() => _model.Password)"
                      Required="true"
                      InputType="@(_showPassword ? InputType.Text : InputType.Password)"
                      Adornment="Adornment.End"
                      AdornmentIcon="@(_showPassword ? Icons.Material.Filled.VisibilityOff : Icons.Material.Filled.Visibility)"
                      OnAdornmentClick="() => _showPassword = !_showPassword"
                      Variant="Variant.Outlined"
                      FullWidth="true"
                      Class="mt-3"/>

        <MudButton OnClick="DoRegister"
                   Disabled="@(_busy || !_editContext.Validate())"
                   Color="Color.Primary"
                   Variant="Variant.Filled"
                   Class="mt-4"
                   FullWidth="true"
                   ButtonType="ButtonType.Submit"
                   StartIcon="@Icons.Material.Filled.PersonAdd">
            @(_busy ? "در حال ثبت‌نام..." : "ثبت‌نام")
        </MudButton>

        @if (!string.IsNullOrEmpty(_message))
        {
            <MudAlert Severity="@_severity" Class="mt-3">@_message</MudAlert>
        }
    </EditForm>
</MudPaper>

@code {

    private RegisterVm              _model = new();
    private EditContext             _editContext;
    private bool                    _busy;
    private bool                    _showPassword;
    private string                  _message;
    private Severity                _severity = Severity.Error;
    private CancellationTokenSource _cts;

    protected override void OnInitialized()
    {
        _editContext = new EditContext(_model);
    }

    private async Task DoRegister()
    {
        if (_busy) return;
        _message = string.Empty;
        _cts?.Dispose();
        _cts = new CancellationTokenSource();

        try
        {
            _busy = true;

            var ok = await Auth.RegisterAsync(_model.Email , _model.Password , _model.FullName , _cts.Token);

            if (ok)
            {
                _severity = Severity.Success;
                _message  = "ثبت‌نام موفقیت‌آمیز بود. در حال انتقال به صفحه ورود...";
                NavManager.NavigateTo("/login" , forceLoad: true);
            }
            else
            {
                _severity = Severity.Error;
                _message  = "ثبت‌نام ناموفق بود! لطفاً اطلاعات را بررسی کنید.";
            }
        }
        catch (OperationCanceledException) { }
        catch (Exception)
        {
            _severity = Severity.Error;
            _message  = "خطا در برقراری ارتباط با سرور.";
        }
        finally
        {
            _busy = false;
        }
    }

    public void Dispose()
    {
        _cts?.Cancel();
        _cts?.Dispose();
    }

    private class RegisterVm
    {
        [Required(ErrorMessage = "نام کامل الزامی است.")] [MinLength(3 , ErrorMessage = "حداقل ۳ کاراکتر.")]
        public string FullName { get; set; } = string.Empty;

        [Required(ErrorMessage = "ایمیل الزامی است.")] [EmailAddress(ErrorMessage = "ایمیل نامعتبر است.")]
        public string Email { get; set; } = string.Empty;

        [Required(ErrorMessage = "رمز عبور الزامی است.")] [MinLength(6 , ErrorMessage = "حداقل ۶ کاراکتر.")]
        public string Password { get; set; } = string.Empty;
    }

}
