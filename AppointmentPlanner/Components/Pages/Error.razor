@page "/Error"


<PageTitle>Error</PageTitle>

<MudPaper Class="d-flex justify-center align-center" Style="height:100vh; background-color:#f5f5f5;">
    <MudCard Class="pa-6 mud-width-full mud-width-md-6 mud-elevation-10">
        <MudCardHeader>
            <MudText Typo="Typo.h4" Class="text-error">
                Oops! Something went wrong.
            </MudText>
        </MudCardHeader>

        <MudCardContent>
            <MudAlert Severity="Severity.Error" Variant="Variant.Filled" Dense="true" Class="mb-4">
                An error occurred while processing your request.
            </MudAlert>

            @if (ShowRequestId)
            {
                <MudText Typo="Typo.body2">
                    <strong>Request ID:</strong>
                    <MudHighlighter>@RequestId</MudHighlighter>
                </MudText>
            }

            <MudDivider Class="my-4"/>

            <MudText Typo="Typo.subtitle1" Class="mb-2">Development Mode</MudText>
            <MudText Typo="Typo.body2">
                Switching to <strong>Development</strong> will display more detailed error information.<br/>
                <strong>Warning:</strong> Don’t enable it in production — sensitive data could be exposed.
            </MudText>
        </MudCardContent>

        <MudCardActions Class="d-flex justify-end">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@GoHome">
                Go Home
            </MudButton>
        </MudCardActions>
    </MudCard>
</MudPaper>

@code {
    [CascadingParameter] private HttpContext? HttpContext { get; set; }

    private string? RequestId { get; set; }
    private bool ShowRequestId => !string.IsNullOrEmpty(RequestId);

    protected override void OnInitialized()
    {
        RequestId = Activity.Current?.Id ?? HttpContext?.TraceIdentifier;
    }

    private void GoHome()
    {
        NavManager.NavigateTo("/");
    }

}