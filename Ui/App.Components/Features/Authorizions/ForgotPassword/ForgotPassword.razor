@page "/forgot-password"
@using App.Applications.Users.Requests.ForgotPassword
@inject IStringLocalizer<ForgotPassword> Localizer


<!-- Container restricts width on tablets/desktops, but is fluid on smaller screens -->
<MudContainer MaxWidth="MaxWidth.Medium" Class="pa-4">

    <MudGrid Justify="Justify.Center">
        <!-- Left side: logo or other content -->
        <MudItem xs="12" sm="6" md="6" Class="d-flex flex-column justify-center align-center">
            <MudText Align="Align.Center" Typo="Typo.h2" Color="Color.Tertiary">
                @Localizer["forgot password title"]
            </MudText>
        </MudItem>

        <!-- Right side: the login form -->
        <MudItem xs="12" sm="6" md="6">
            <AppForm TModel="ForgotPasswordRequest" Model="Request" OnValidSubmit="PostAsync">
                <FormProps>
                    <!-- Username field -->
                    <MudTextField
                        For="@(() => Request.UserName)"
                        @bind-Value="Request.UserName"
                        Label="@Localizer[nameof(Request.UserName)]"
                        InputType="InputType.Text"
                        Variant="Variant.Outlined"
                        Margin="Margin.Normal"
                        HelperText="@Localizer["UserName Tips"]"
                        HelperTextOnFocus/>

                    <!-- Password field -->
                    <MudTextField
                        For="@(() => Request.NewPassword)"
                        @bind-Value="Request.NewPassword"
                        Label="@Localizer[nameof(Request.NewPassword)]"
                        Adornment="Adornment.End"
                        Variant="Variant.Outlined"
                        Margin="Margin.Normal"
                        HelperTextOnFocus/>

                    <!-- Password field -->
                    <MudTextField
                        For="@(() => Request.ConfirmPassword)"
                        @bind-Value="Request.ConfirmPassword"
                        Label="@Localizer[nameof(Request.ConfirmPassword)]"
                        Adornment="Adornment.End"
                        Variant="Variant.Outlined"
                        Margin="Margin.Normal"
                        HelperTextOnFocus/>
                </FormProps>

                <SubmitButton>
                    <MudItem xs="12">
                        <MudButton
                            Color="Color.Primary"
                            Variant="Variant.Filled"
                            ButtonType="ButtonType.Submit"
                            FullWidth="true">
                            @if (ApiCalling)
                            {
                                <progress Color="Color.Info" Size="Size.Small"/>
                            }
                            else
                            {
                                @Localizer["submit"]
                            }
                        </MudButton>
                    </MudItem>

                    <MudStack Justify="Justify.Center" Row="true" AlignItems="AlignItems.Center" Class="my-2 mb-4">
                        <MudButton
                            Href="/Login"
                            Color="Color.Info"
                            Variant="Variant.Filled"
                            ButtonType="ButtonType.Button"
                            FullWidth>
                            @Localizer["login page"]
                        </MudButton>
                    </MudStack>
                </SubmitButton>
            </AppForm>
        </MudItem>

    </MudGrid>
</MudContainer>

@code {

    [SupplyParameterFromQuery(Name = nameof(Username))]
    private string Username { get; set; }

    public ForgotPasswordRequest Request { get; set; } = new ForgotPasswordRequest();
    public bool ApiCalling { get; set; }

    protected override void OnInitialized()
    {
        Request = new ForgotPasswordRequest()
        {
            UserName = Username ,
        };
    }

    private async Task PostAsync()
        => await Mediator.Send(Request);

}
