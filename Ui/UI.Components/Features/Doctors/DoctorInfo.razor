@page "/doci"
@using App.Applications.Doctor.Requests.Get
@using UI.Components.Common.BaseComponents.Picture

<div>
    @if (_loading)
    {
        <MudSkeleton Height="180px" Width="100%" Class="mb-4"/>

        <MudSkeleton Height="220px" Width="100%"/>
    }
    else
    {
        @if (_doctor is null)
        {
            <MudAlert Severity="Severity.Info" Dense>اطلاعات پزشک در دسترس نیست.</MudAlert>
        }
        else
        {
            <MudCard Class="doctor-card equal-height-box">
                <MudCardHeader Class="doctor-card__header">
                    <MudText class="doctor-card__title">
                        <MudAvatar Size="Size.Large" Variant="Variant.Filled" Color="Color.Primary">
                            @if (!string.IsNullOrWhiteSpace(_doctor.PhotoUrl))
                            {
                                <ServerImage Src="@_doctor.PhotoUrl" Alt="@_doctor.FullName"/>
                            }
                            else
                            {
                                <MudIcon Icon="@MaterialIcons.Filled.MedicalInformation"/>
                            }
                        </MudAvatar>

                        <MudStack>
                            <MudText Typo="Typo.h5">@_doctor.FullName</MudText>
                            <MudText Typo="Typo.subtitle2" Color="Color.Secondary">@_doctor.Title</MudText>
                        </MudStack>
                    </MudText>
                    <MudItem>
                        @if (_doctor.YearsOfExperience > 0)
                        {
                            <MudChip T="string" Color="Color.Info" Variant="Variant.Outlined" Dense
                                     Icon="@MaterialIcons.Filled.WorkHistory">
                                تجربه: @_doctor.YearsOfExperience سال
                            </MudChip>
                        }
                    </MudItem>
                </MudCardHeader>

                <MudCardContent>
                    @if (_doctor.Specialties?.Length > 0)
                    {
                        <MudText Typo="Typo.subtitle2" Class="mb-1">تخصص‌ها</MudText>

                        <MudChipSet T="string">
                            @foreach (var s in _doctor.Specialties)
                            {
                                <MudChip T="string" Variant="Variant.Filled" Color="Color.Primary" Dense>@s</MudChip>
                            }
                        </MudChipSet>

                        <MudDivider Class="my-3"/>
                    }

                    @if (_doctor.Languages?.Length > 0)
                    {
                        <MudText Typo="Typo.subtitle2" Class="mb-1">زبان‌ها</MudText>

                        <MudChipSet T="string">
                            @foreach (var l in _doctor.Languages)
                            {
                                <MudChip T="string" Variant="Variant.Outlined" Color="Color.Secondary" Dense>@l</MudChip>
                            }
                        </MudChipSet>

                        <MudDivider Class="my-3"/>
                    }

                    @if (!string.IsNullOrWhiteSpace(_doctor.Biography))
                    {
                        <MudExpansionPanels Elevation="0">
                            <MudExpansionPanel Text="معرفی پزشک" Expanded="@_bioOpen"
                                               OnExpandedChanged="b => _bioOpen = b">
                                <MudText>@_doctor.Biography</MudText>
                            </MudExpansionPanel>
                        </MudExpansionPanels>

                        <MudDivider Class="my-3"/>
                    }

                    @if (_doctor.Education?.Length > 0)
                    {
                        <MudText Typo="Typo.subtitle2" Class="mb-1">سوابق تحصیلی</MudText>

                        <MudList T="string" Dense>
                            @foreach (var e in _doctor.Education)
                            {
                                <MudListItem T="string" Icon="@MaterialIcons.Filled.School">@e</MudListItem>
                            }
                        </MudList>
                    }
                </MudCardContent>

                <MudCardActions Class="justify-end">
                    @if (!string.IsNullOrWhiteSpace(_doctor.Website))
                    {
                        <MudButton Variant="Variant.Text" Color="Color.Primary"
                                   StartIcon="@MaterialIcons.Filled.Public"
                                   Href="@NormalizeUrl(_doctor.Website)" Target="_blank">
                            وب‌سایت
                        </MudButton>
                    }
                    @if (!string.IsNullOrWhiteSpace(_doctor.LinkedIn))
                    {
                        <MudButton Variant="Variant.Text" Color="Color.Info"
                                   StartIcon="@MaterialIcons.Filled.Link"
                                   Href="@NormalizeUrl(_doctor.LinkedIn)" Target="_blank">
                            لینکدین
                        </MudButton>
                    }
                    @if (!string.IsNullOrWhiteSpace(_doctor.Instagram))
                    {
                        <MudButton Variant="Variant.Text" Color="Color.Tertiary"
                                   StartIcon="@MaterialIcons.Filled.PhotoCamera"
                                   Href="@NormalizeUrl(_doctor.Instagram)" Target="_blank">
                            اینستاگرام
                        </MudButton>
                    }
                    @if (!string.IsNullOrWhiteSpace(_doctor.WhatsApp))
                    {
                        <MudButton Variant="Variant.Text" Color="Color.Success"
                                   StartIcon="@MaterialIcons.Filled.Chat"
                                   Href="@WhatsAppHref(_doctor.WhatsApp)" Target="_blank">
                            واتس‌اپ
                        </MudButton>
                    }
                </MudCardActions>
            </MudCard>
        }
    }
</div>
@code {
    private DoctorProfileResponse? _doctor;
    private bool                   _loading = true;
    private bool                   _bioOpen = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _doctor = await Mediator.Send(new GetDoctorProfileRequest()); // use your actual request name
        }
        catch (Exception ex)
        {
            Snackbar.ShowError($"خطا در دریافت اطلاعات: {ex.Message}");
        }
        finally
        {
            _loading = false;
        }
    }

    private static string NormalizeUrl(string? url)
    {
        if (string.IsNullOrWhiteSpace(url)) return "";
        if (Uri.TryCreate(url, UriKind.Absolute, out _)) return url;
        return "https://" + url.Trim();
    }

    private static string WhatsAppHref(string? input)
    {
        if (string.IsNullOrWhiteSpace(input)) return "";
        if (input.StartsWith("http", StringComparison.OrdinalIgnoreCase)) return input;
        var digits = new string(input.Where(char.IsDigit).ToArray());
        return $"https://wa.me/{digits}";
    }
}

<style>
/* Doctor-only page styles */
.doctor-card {
    border-radius: 14px;
    overflow: hidden;
}
.doctor-card__header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: .75rem;
    padding: 16px;
    background: linear-gradient(135deg, rgba(99, 102, 241, .12), rgba(16, 185, 129, .12));
    border-bottom: 1px solid rgba(255, 255, 255, .06);
}

.doctor-card__title {
    display: flex;
    align-items: center;
    gap: .75rem;
}
</style>
