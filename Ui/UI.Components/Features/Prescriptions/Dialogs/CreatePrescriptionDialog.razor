@using App.Applications.DrugStore.Queries
@using App.Applications.DrugStore.Responses
@using App.Applications.Prescriptions.Requests
@using App.Applications.Prescriptions.Apis
@using UI.Components.Features.Drugs.Components

<MudDialog>
    <TitleContent>نسخهٔ جدید</TitleContent>

    <DialogContent>
        <MudForm Model="@Vm">
            <MudStack Spacing="2">

                <MudGrid Class="items-center">
                    <MudItem xs="12" md="12">
                        <MudTextField @bind-Value="Vm.Notes"
                                      Variant="Variant.Text"
                                      Label="یادداشت پزشک (اختیاری)"/>
                    </MudItem>
                </MudGrid>

                <MudText Typo="Typo.subtitle2" Class="fw-bold">اقلام نسخه</MudText>

                <!-- Add row -->
                <MudGrid Class="items-center">
                    <MudItem xs="12" md="12">
                        <!-- OPTION A: use MudAutocomplete directly (recommended for full control) -->
                        <DrugAutoComplete
                            @ref="DrugAutoComplete"
                            ValueChanged="DrugSelected"
                            Dense="true"
                            Label="دارو جدید"
                            Variant="Variant.Text"
                            Placeholder="جستجوی دارو…"
                            MinCharacters="2"/>

                    </MudItem>

                    <MudItem xs="4" md="3">
                        <MudTextField @bind-Value="_newItem.Dosage"
                                      Variant="Variant.Text" Label="دوز" Placeholder="مثلا 500mg" Required/>
                    </MudItem>
                    <MudItem xs="4" md="3">
                        <MudTextField @bind-Value="_newItem.Frequency"
                                      Variant="Variant.Text" Label="تکرار" Placeholder="مثلا هر 8 ساعت" Required/>
                    </MudItem>
                    <MudItem xs="4" md="3">
                        <MudTextField @bind-Value="_newItem.Duration"
                                      Variant="Variant.Text" Label="مدت" Placeholder="مثلا 7 روز" Required/>
                    </MudItem>
                    <MudItem xs="4" md="3">
                        <MudSwitch T="bool" @bind-Value="_newItem.IsPRN" Color="Color.Primary"
                                   Label="در صورت نیاز (PRN)"/>
                    </MudItem>


                    <MudItem xs="4" md="2">
                        <MudNumericField @bind-Value="_newItem.RefillCount" Min="0" Max="12" Immediate="true"
                                         Label="تمدید"/>
                    </MudItem>
                    <MudItem xs="12" md="12" Class="text-end">
                        <MudButton Color="Color.Primary" Variant="Variant.Filled"
                                   Disabled="@(!CanAddNewItem)"
                                   OnClick="AddItem">
                            افزودن
                        </MudButton>
                    </MudItem>
                </MudGrid>


                <!-- Items table -->
                <MudTable Items="Vm.Items" Dense Hover Class="mt-2">
                    <HeaderContent>
                        <MudTh>دارو</MudTh>
                        <MudTh>دوز</MudTh>
                        <MudTh>تکرار</MudTh>
                        <MudTh>مدت</MudTh>
                        <MudTh>PRN</MudTh>
                        <MudTh>تمدید</MudTh>
                        <MudTh></MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd>@(string.IsNullOrWhiteSpace(context.DrugName) ? "—" : context.DrugName)</MudTd>
                        <MudTd>@context.Dosage</MudTd>
                        <MudTd>@context.Frequency</MudTd>
                        <MudTd>@context.Duration</MudTd>
                        <MudTd>@(context.IsPRN ? "بله" : "خیر")</MudTd>
                        <MudTd>@context.RefillCount</MudTd>
                        <MudTd Class="text-end">
                            <MudIconButton Icon="@MaterialIcons.Filled.Delete" Color="Color.Error" Size="Size.Small"
                                           Title="حذف" OnClick="@(() => RemoveItem(context))"/>
                        </MudTd>
                    </RowTemplate>
                    <NoRecordsContent>
                        <MudText Color="Color.Secondary">هنوز قلمی اضافه نشده.</MudText>
                    </NoRecordsContent>
                </MudTable>

            </MudStack>
        </MudForm>
    </DialogContent>

    <DialogActions>
        <MudButton Variant="Variant.Text" Color="Color.Secondary" OnClick="Cancel">انصراف</MudButton>
        <MudButton Variant="Variant.Outlined" Color="Color.Default" OnClick="SubmitWithoutPrescription">ثبت بدون نسخه
        </MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Submit" Disabled="@_busy">ثبت نسخه
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = default!;

    [Parameter] public Guid   AppointmentId { get; set; }
    [Parameter] public long   PatientUserId { get; set; }
    [Parameter] public int    IssueMethod { get; set; } = 0; // 0=Paper, 1=E-Prescription
    [Parameter] public string? PrefillNotes { get; set; }

    private bool     _busy;

    private CreatePrescriptionRequest     Vm       = new();
    private CreatePrescriptionItemRequest _newItem = new();

    private DrugAutocompleteItem? _pickedDrug;
    private string                _drugText = string.Empty; // unified text (selected or custom)


    private bool CanAddNewItem => !string.IsNullOrWhiteSpace(_newItem.Dosage) && !string.IsNullOrWhiteSpace(_newItem.Frequency) && !string.IsNullOrWhiteSpace(_newItem.Duration) && (!string.IsNullOrWhiteSpace(_drugText) || _pickedDrug is not null);
    private DrugAutoComplete? DrugAutoComplete { get ; set ; }

    private async Task AddItem()
    {
        if (!CanAddNewItem) return;

        // prefer selected suggestion; otherwise use free text
        Guid?   drugId   = TryGetDrugId(_pickedDrug);
        string? drugName = _pickedDrug is not null ? DefaultText(_pickedDrug) : _drugText.Trim();

        Vm.Items.Add(new CreatePrescriptionItemRequest
        {
            DrugId       = drugId,
            DrugName     = drugName, // keep human-readable name even if DrugId present
            Dosage       = _newItem.Dosage.Trim(),
            Frequency    = _newItem.Frequency.Trim(),
            Duration     = _newItem.Duration.Trim(),
            Instructions = _newItem.Instructions,
            IsPRN        = _newItem.IsPRN,
            RefillCount  = _newItem.RefillCount
        });

        await ResetNewRow();
        StateHasChanged();
    }

    private async Task ResetNewRow()
    {
        _pickedDrug = null;
        _drugText   = string.Empty;
        _newItem    = new();
        await DrugAutoComplete!.Reset();
    }

    protected override void OnInitialized()
    {
        Vm.AppointmentId = AppointmentId;
        Vm.PatientUserId = PatientUserId;
        Vm.IssueMethod   = IssueMethod;
        Vm.Notes         = PrefillNotes;
    }

    private void RemoveItem(CreatePrescriptionItemRequest row)
        => Vm.Items.Remove(row);

    private async Task Submit()
    {
        if (_busy) return;

        if (Vm.Items.Count == 0)
        {
            Snackbar.ShowError("حداقل یک قلم نسخه اضافه کنید یا از «ثبت بدون نسخه» استفاده کنید.");
            return;
        }

        _busy = true;

        try
        {
            var resp = await Mediator.Send(new CreatePrescriptionCommand()
            {
                Body = Vm
            });

            Snackbar.ShowSuccess("نسخه با موفقیت ثبت شد.");
            MudDialog.Close(DialogResult.Ok(resp));
        }
        catch (Exception ex)
        {
            Snackbar.ShowError($"اشکال در ثبت نسخه: {ex.Message}");
        }
        finally
        {
            _busy = false;
        }
    }

    private void SubmitWithoutPrescription()
        => MudDialog.Close();

    private void Cancel()
        => MudDialog.Cancel();

    // ---------- helpers ----------
    private static Guid? TryGetDrugId(DrugAutocompleteItem? d)
        => d?.Id;

    private static string DefaultText(DrugAutocompleteItem? d)
    {
        if (d is null) return string.Empty;

        var     t       = d.GetType();
        string? brand   = t.GetProperty("BrandName")?.GetValue(d)?.ToString();
        string? generic = t.GetProperty("GenericName")?.GetValue(d)?.ToString();
        string? label   = t.GetProperty("Label")?.GetValue(d)?.ToString();
        string  main    = label ?? brand ?? generic ?? d.ToString() ?? string.Empty;

        string? strength = t.GetProperty("Strength")?.GetValue(d)?.ToString() ?? $"{t.GetProperty("StrengthValue")?.GetValue(d)} {t.GetProperty("StrengthUnit")?.GetValue(d)}".Trim();

        string? form = t.GetProperty("Form")?.GetValue(d)?.ToString();

        var extra = string.Join(" ",
            new[]
            {
                strength,
                form
            }.Where(s => !string.IsNullOrWhiteSpace(s)));

        return string.IsNullOrWhiteSpace(extra) ? main : $"{main} — {extra}";
    }

    private async Task DrugSelected(DrugAutocompleteItem? d)
    {
        if (d is null )
            return;

        _pickedDrug = d;


        var drug = await Mediator.Send(new GetDrugByIdQuery()
        {
            Id = d!.Id
        });

        if (drug == null)
            Snackbar.ShowError("drug not fpund .");

        if (_newItem is { Dosage: "" , DrugName: null , RefillCount: 0 , Duration: "" , Frequency: "" })
            _newItem = CreatePrescriptionItemRequest.ToPrescriptionItem(
                drug!,
                dosage: "500mg",
                frequency: "هر 8 ساعت",
                duration: "7 روز",
                isPrn: false,
                refillCount: 1
            );

        StateHasChanged();
    }

}
