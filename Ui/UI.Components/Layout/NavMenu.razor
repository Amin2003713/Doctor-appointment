@using System.Security.Claims
@using App.Applications.Users.Queries.GetUserInfo
@using Microsoft.AspNetCore.Components.Authorization
@using UI.Components.Common.BaseComponents.Dialogs
@using UI.Components.Common.BaseComponents.Picture
<MudNavMenu Margin="Margin.Normal" Rounded Bordered Dense>

    <!-- عمومی -->
    <MudNavLink Href="/" Icon="@MaterialIcons.Filled.Home" IconColor="Color.Primary">
        صفحه اصلی
    </MudNavLink>

    <!-- Doctor (super admin) -->
    <AuthorizeView Roles="Doctor">
        <Authorized Context="auth">
            <MudNavGroup Title="ثبت‌نام" Icon="@MaterialIcons.Filled.PersonAdd" IconColor="Color.Tertiary">
                <MudNavLink OnClick="OpenRegisterDialog" Icon="@MaterialIcons.Filled.PersonAdd"
                            IconColor="Color.Success">
                    @(auth.User.IsInRole("Doctor") ? "ثبت‌نام (بیمار,منشی)" : "ثبت‌نام بیمار")
                </MudNavLink>
                <MudNavLink OnClick="@(() => Navigate("/appointments"))" Icon="@MaterialIcons.Filled.CalendarMonth" IconColor="Color.Info">
                    @(auth.User.IsInRole("Doctor") ? "رزرو نوبت" : "رزرو نوبت")
                </MudNavLink>
            </MudNavGroup>
        </Authorized>
    </AuthorizeView>

    <!-- Patient, Secretary, Doctor can see patient menu -->
    <AuthorizeView Roles="Patient,Secretary,Doctor">
        <Authorized Context="auth">
            <MudNavGroup Title="@(auth.User.IsInRole("Patient")                             ? "پنل بیمار" :
                                auth.User.IsInRole("Secretary") ? "پنل بیمار (دستیار)" :
                                                                  "پنل بیمار")">

                <MudNavLink OnClick="@(() => Navigate("/patient/appointments"))"   Icon="@MaterialIcons.Filled.EventAvailable"
                            IconColor="Color.Success">
                    @(auth.User.IsInRole("Patient") ? "نوبت‌های من" : "نوبت‌های بیماران")
                </MudNavLink>

                <MudNavLink OnClick="@(() => Navigate("/patient/history"))"  Icon="@MaterialIcons.Filled.History" IconColor="Color.Info">
                    @(auth.User.IsInRole("Patient") ? "سوابق نوبت من" : "سوابق نوبت بیماران")
                </MudNavLink>

                <MudNavLink OnClick="@(() => Navigate("/patient/cancel"))"  Icon="@MaterialIcons.Filled.Cancel" IconColor="Color.Error">
                    @(auth.User.IsInRole("Patient") ? "لغو نوبت من" : "لغو نوبت بیماران")
                </MudNavLink>
            </MudNavGroup>
        </Authorized>
    </AuthorizeView>

    <!-- Secretary -->
    <AuthorizeView Roles="Secretary,Doctor">
        <Authorized Context="auth">
            <MudNavLink OnClick="@(() => Navigate("/secretary/book"))" Icon="@MaterialIcons.Filled.PersonAddAlt1" IconColor="Color.Success">
                @(auth.User.IsInRole("Secretary") ? "رزرو برای بیمار" : "رزرو برای بیمار")
            </MudNavLink>
            <MudNavLink OnClick="@(() => Navigate("/users?Secretaries=false"))" Icon="@MaterialIcons.Filled.Group" IconColor="Color.Info">
                @("لیست بیماران")
            </MudNavLink>
        </Authorized>
    </AuthorizeView>

    <!-- Doctor (super admin only) -->
    <AuthorizeView Roles="Doctor">
        <Authorized>
            <MudNavLink OnClick="@(() => Navigate("/users?Secretaries=true"))"  Icon="@MaterialIcons.Filled.Group" IconColor="Color.Info">
                @("لیست منشی ها")
            </MudNavLink>
            <MudNavLink Href="/doctor/schedule" Icon="@MaterialIcons.Filled.Schedule" IconColor="Color.Info">
                تعریف بازه‌های زمانی
            </MudNavLink>
            <MudNavLink Href="/doctor/agenda" Icon="@MaterialIcons.Filled.ViewAgenda" IconColor="Color.Primary">
                لیست نوبت‌های روزانه
            </MudNavLink>
            <MudNavLink Href="/doctor/manage" Icon="@MaterialIcons.Filled.EditCalendar" IconColor="Color.Warning">
                مدیریت/جابجایی نوبت
            </MudNavLink>
            <MudNavLink Href="/reports/appointments" Icon="@MaterialIcons.Filled.Assessment"
                        IconColor="Color.Secondary">
                گزارش همه نوبت‌ها
            </MudNavLink>
        </Authorized>
    </AuthorizeView>

    <!-- Logged in -->
    <AuthorizeView>
        <Authorized Context="auth">
            <MudDivider Class="my-2"/>
            <MudNavLink OnClick="OpenUserInfo" IconColor="Color.Primary">
                <MudStack Row AlignItems="AlignItems.Center" Spacing="2">
                    <MudAvatar>
                        <ServerImage Src="@StateProvider.User?.Profile"/>
                    </MudAvatar>

                    <!-- متن ها کنار آواتار، ولی خودشون عمودی -->
                    <MudStack Spacing="0">
                        <!-- نام کامل -->
                        <MudText Typo="Typo.subtitle1" Bold="true">
                            @($"{GetRoleName(auth.User)}: {StateProvider.User?.FirstName} {StateProvider.User?.LastName}")
                        </MudText>

                        <!-- نقش یا یوزرنیم به عنوان کپشن زیر نام -->
                        <MudText Typo="Typo.caption" Color="Color.Secondary">
                            @StateProvider.User?.UserName
                        </MudText>
                    </MudStack>
                </MudStack>

            </MudNavLink>
        </Authorized>
    </AuthorizeView>
</MudNavMenu>

@code {

    private string GetRoleName(ClaimsPrincipal user)
    {
        if (user.IsInRole("Doctor")) return "دکتر";
        if (user.IsInRole("Secretary")) return "منشی";
        if (user.IsInRole("Patient")) return "بیمار";

        return "کاربر";
    }

    private async Task OpenRegisterDialog()
    {
        var options = new DialogOptions
        {
            CloseOnEscapeKey = true,
            FullWidth        = true,
            MaxWidth         = MaxWidth.Small
        };


        await DialogService.ShowAsync<RegisterDialog>("ثبت‌نام", options);
    }

    public void Navigate(string to , bool hard = true)
        => NavigationManager.NavigateTo(to , false, hard);

    private async Task OpenUserInfo()
    {
        var options = new DialogOptions
        {
            CloseOnEscapeKey = true,
            MaxWidth         = MaxWidth.Medium,
            FullWidth        = true,
            CloseButton      = true,
            Position         = DialogPosition.Center
        };

        var user = await Mediator.Send(new GetUserInfoQuery());


        var parameters = new DialogParameters
        {
            {
                "Model", user
            },
            {
                "AllowEdit", !StateProvider.User?.Roles?.Contains("Patient") ?? false
            }
        };


        await DialogService.ShowAsync<ProfileInfoDialog>("اطلاعات کاربر", parameters, options);
    }

}
